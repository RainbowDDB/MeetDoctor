apply plugin: 'com.android.application'

android {
    signingConfigs {
        release {
            keyAlias 'Doctor'
            keyPassword 'RainbowDoctor'
            storeFile file('E:/Android/MeetDoctor/keystore.jks')
            storePassword 'Rainbow0304DDB'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.meetdoctor"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.t.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true // 开启混淆
            shrinkResources true // 资源压缩
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }
    applicationVariants.all {
        // 判断是release还是debug版本
        def buildType = it.buildType.name
        def fileName
        def outputFile
        // 下面的channel是获取渠道号，你获取渠道号不一定会和我的代码一样，
//        def channel = it.productFlavors[0].name.split("-")[0]
        // 获取当前时间的"YYYY-MM-dd"格式。
//        def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
        it.outputs.each {
            outputFile = it.outputFile
            // 命名规则是：渠道名_项目名_版本名_创建时间_构建类型.apk
            fileName = "meetdoctor_v${defaultConfig.versionName}_${buildType}.apk"
            // 重新对apk命名。(适用于Gradle4.0（含）以上版本)如果你Gradle版本是4.x则将上面的一行代码注释，解开注释下面的这一行。
            it.outputFileName = fileName
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    // 友盟统计
    implementation 'com.umeng.umsdk:analytics:7.5.4'
    implementation 'com.umeng.umsdk:common:1.5.4'

    // 单Activity+多Fragment架构框架 Fragmentation
    implementation 'me.yokeyword:fragmentation:1.3.6'
    // 如果想使用SwipeBack 滑动边缘退出Fragment/Activity功能，完整的添加规则如下：
    implementation 'me.yokeyword:fragmentation:1.3.6'
    // swipeback基于fragmentation, 如果是自定制SupportActivity/Fragment，则参照SwipeBackActivity/Fragment实现即可
    implementation 'me.yokeyword:fragmentation-swipeback:1.3.6'
    // Activity作用域的EventBus，更安全，可有效避免after onSavedInstanceState()异常
    implementation 'me.yokeyword:eventbus-activity-scope:1.1.0'
    
    // EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'
    // Retrofit + OkHttp + Glide
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.5.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.okio:okio:2.1.0'
    //    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'
    // Logger日志
    implementation 'com.orhanobut:logger:2.2.0'
    // Banner
    implementation 'com.bigkoo:convenientbanner:2.0.5'
    // Loading
    api 'com.wang.avi:library:2.1.3'
    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
    // Chart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0-alpha'
    // Baidu Speech
    implementation files('libs/bdasr_V3_20180801_d6f298a.jar')
    testImplementation 'junit:junit:4.12'
}